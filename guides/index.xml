<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Guides on annotorious.github.io</title>
    <link>http://annotorious.github.io/guides/</link>
    <description>Recent content in Guides on annotorious.github.io</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 18 Sep 2022 08:54:00 +0200</lastBuildDate>
    <atom:link href="http://annotorious.github.io/guides/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Configuring the Editor</title>
      <link>http://annotorious.github.io/guides/configuring-the-editor/</link>
      <pubDate>Thu, 24 Sep 2020 14:24:22 +0200</pubDate>
      <guid>http://annotorious.github.io/guides/configuring-the-editor/</guid>
      <description>&lt;h1 id=&#34;customizing-the-editor&#34;&gt;Customizing the Editor&lt;/h1&gt;&#xA;&lt;p&gt;Per default, the Annotorious editor popup features two widgets:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A &lt;strong&gt;comment widget&lt;/strong&gt; for writing comments and replies&lt;/li&gt;&#xA;&lt;li&gt;A &lt;strong&gt;tag widget&lt;/strong&gt; for adding tags, either freetext or supported by a pre-configured vocabulary and an autosuggest dropdown&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://annotorious.github.io/images/guides/editor-popup-with-vocab.png&#34; alt=&#34;Editor popup&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;You can can customize this setup when you initialize Annotorious/RecogitoJS using the&#xA;&lt;code&gt;widgets&lt;/code&gt; config option. The configuration below will give you the editor shown in the&#xA;image above.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Customizing Styles</title>
      <link>http://annotorious.github.io/guides/customizing-styles/</link>
      <pubDate>Thu, 24 Sep 2020 10:47:22 +0200</pubDate>
      <guid>http://annotorious.github.io/guides/customizing-styles/</guid>
      <description>&lt;h1 id=&#34;customizing-visual-appearance&#34;&gt;Customizing Visual Appearance&lt;/h1&gt;&#xA;&lt;p&gt;Need a different look and feel? Customizing the visual appearance of Annotorious is easy.&#xA;All elements of the annotation layer and the editor popup can be styled with CSS.&lt;/p&gt;&#xA;&lt;h2 id=&#34;customizing-shape-styles&#34;&gt;Customizing Shape Styles&lt;/h2&gt;&#xA;&lt;p&gt;Annotorious renders annotations using &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/SVG&#34;&gt;SVG&lt;/a&gt;.&#xA;You can completely alter the visual appearance of every graphical element via CSS.&lt;/p&gt;&#xA;&lt;p&gt;To make styling more flexible, Annotorious adds a few extras:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;For every annotation shape, Annotorious renders two SVG shapes, exactly on top of each other. The two shapes&#xA;have different CSS classes - &lt;code&gt;a9s-inner&lt;/code&gt; and &lt;code&gt;a9s-outer&lt;/code&gt;. You can use this to create line styles with an outline.&#xA;(The default style renders an outer black line and a slightly thinner white inner line.)&lt;/li&gt;&#xA;&lt;li&gt;When the user creates a new selection, Annotorious renders a mask element. In the default theme, the mask is&#xA;hidden. But you can enable it via CSS to add a dimming effect to the area outside the selection.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;custom-style-example&#34;&gt;Custom Style Example&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://annotorious.github.io/images/guides/custom-annotationlayer-style.jpg&#34; alt=&#34;A custom annotation layer style&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Headless Mode</title>
      <link>http://annotorious.github.io/guides/headless-mode/</link>
      <pubDate>Sat, 03 Apr 2021 10:28:42 +0200</pubDate>
      <guid>http://annotorious.github.io/guides/headless-mode/</guid>
      <description>&lt;h1 id=&#34;headless-mode-using-annotorious-without-the-editor-popup&#34;&gt;Headless Mode: Using Annotorious without the Editor Popup&lt;/h1&gt;&#xA;&lt;p&gt;Want to use Annotorious only for the drawing tools? But don&amp;rsquo;t need&#xA;the editor? That&amp;rsquo;s what &lt;strong&gt;headless mode&lt;/strong&gt; is for! In headless mode, you keep&#xA;all the standard functionality: drawing and editing shapes, JavaScript API,&#xA;lifecycle events. But you are free to build your own user interface, without being&#xA;forced to the standard editor popup.&lt;/p&gt;&#xA;&lt;p&gt;The demo uses headless mode to create annotations with either an &lt;strong&gt;Orange&lt;/strong&gt;&#xA;or &lt;strong&gt;Green&lt;/strong&gt; tag, and a &lt;a href=&#34;http://annotorious.github.io/api-docs/annotorious/#formatters&#34;&gt;formatter&lt;/a&gt;&#xA;to color the shapes. (To delete an annotation, select it and press the &lt;strong&gt;Delete&lt;/strong&gt; key.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Annotorious in Vue</title>
      <link>http://annotorious.github.io/guides/annotorious-in-vue/</link>
      <pubDate>Sun, 18 Sep 2022 08:54:00 +0200</pubDate>
      <guid>http://annotorious.github.io/guides/annotorious-in-vue/</guid>
      <description>&lt;h1 id=&#34;using-annotorious-in-vuejs&#34;&gt;Using Annotorious in Vue.js&lt;/h1&gt;&#xA;&lt;p&gt;Below is a minimal example for using Annotorious in Vue.js. Thanks to&#xA;&lt;a href=&#34;https://github.com/gbrits&#34;&gt;Grant Brits&lt;/a&gt; for this contribution!&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#268bd2&#34;&gt;template&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#268bd2&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#268bd2&#34;&gt;img&lt;/span&gt; id&lt;span style=&#34;color:#719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;plan&amp;#34;&lt;/span&gt; src&lt;span style=&#34;color:#719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;img.png&amp;#34;&lt;/span&gt; style&lt;span style=&#34;color:#719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;width: 100%; max-width: 1024px;&amp;#34;&lt;/span&gt; /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;/&lt;span style=&#34;color:#268bd2&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#268bd2&#34;&gt;template&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#268bd2&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#268bd2&#34;&gt;import&lt;/span&gt; { Annotorious} from &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;@recogito/annotorious&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#268bd2&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;@recogito/annotorious/dist/annotorious.min.css&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#268bd2&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;default&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    data() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#719e07&#34;&gt;return&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        anno&lt;span style=&#34;color:#719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#cb4b16&#34;&gt;null&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    methods&lt;span style=&#34;color:#719e07&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      initAnno() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#719e07&#34;&gt;this&lt;/span&gt;.anno &lt;span style=&#34;color:#719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;new&lt;/span&gt; Annotorious({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          image&lt;span style=&#34;color:#719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#b58900&#34;&gt;document&lt;/span&gt;.getElementById(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;plan&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#719e07&#34;&gt;this&lt;/span&gt;.anno.on(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;createAnnotation&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;function&lt;/span&gt; (annotation) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          console.log(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;Created annotation&amp;#39;&lt;/span&gt;, annotation);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#719e07&#34;&gt;this&lt;/span&gt;.anno.on(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;createSelection&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;function&lt;/span&gt; (selection) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          console.log(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;Created selection&amp;#39;&lt;/span&gt;, selection);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#719e07&#34;&gt;this&lt;/span&gt;.anno.on(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;deleteAnnotation&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;function&lt;/span&gt; (annotation) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          console.log(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;Delete annotation&amp;#39;&lt;/span&gt;, selection);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#719e07&#34;&gt;this&lt;/span&gt;.anno.on(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;mouseEnterAnnotation&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;function&lt;/span&gt; (annotation, element) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          console.log(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;Mouse ENTERED annotation&amp;#39;&lt;/span&gt;, annotation);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#719e07&#34;&gt;this&lt;/span&gt;.anno.on(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;selectAnnotation&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;function&lt;/span&gt; (annotation, element) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          console.log(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;Select annotation&amp;#39;&lt;/span&gt;, annotation);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#719e07&#34;&gt;this&lt;/span&gt;.anno.on(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;cancelSelected&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;function&lt;/span&gt; (selection) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          console.log(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;UNSELECTED&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#719e07&#34;&gt;this&lt;/span&gt;.anno.on(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;clickAnnotation&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;function&lt;/span&gt; (annotation, element) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          console.log(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;Clicked annotation&amp;#39;&lt;/span&gt;, annotation);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    mounted() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#719e07&#34;&gt;this&lt;/span&gt;.initAnno();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#268bd2&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Annotorious in React</title>
      <link>http://annotorious.github.io/guides/annotorious-in-react/</link>
      <pubDate>Sun, 25 Apr 2021 16:45:12 +0200</pubDate>
      <guid>http://annotorious.github.io/guides/annotorious-in-react/</guid>
      <description>&lt;h1 id=&#34;using-annotorious-in-react&#34;&gt;Using Annotorious in React&lt;/h1&gt;&#xA;&lt;p&gt;At the moment, Annotorious doesn&amp;rsquo;t have native React integration (yet). If you want to use&#xA;Annotorious in your own React project, there are a few things to consider:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Annotorious modifies the DOM directly:&lt;/strong&gt; you need to use &lt;a href=&#34;https://reactjs.org/docs/refs-and-the-dom.html&#34;&gt;refs&lt;/a&gt;&#xA;to access image DOM elements.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Annotorious has an imperative API:&lt;/strong&gt; wrapping it for React requires a few workarounds, including initialization&#xA;in a &lt;code&gt;useEffect&lt;/code&gt; hook, and storing the &lt;code&gt;anno&lt;/code&gt; object in the component state.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Below is a minimal React component to get you started:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Firebase Storage Plugin</title>
      <link>http://annotorious.github.io/guides/using-firebase-for-storage/</link>
      <pubDate>Fri, 01 May 2020 13:28:54 +0200</pubDate>
      <guid>http://annotorious.github.io/guides/using-firebase-for-storage/</guid>
      <description>&lt;h1 id=&#34;using-firebase-for-storage&#34;&gt;Using Firebase for Storage&lt;/h1&gt;&#xA;&lt;p&gt;A quick and easy way to set up your own annotation store without managing your own server is&#xA;through &lt;a href=&#34;https://firebase.google.com/&#34;&gt;Firebase&lt;/a&gt;, a web application development platform by Google.&#xA;Firebase includes a cloud-based document database with a JavaScript SDK for storing, updating and&#xA;deleting JSON records. All you need to do is wire up the Firebase storage SDK operations with the&#xA;corresponding events from Annotorious.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://annotorious.github.io/images/guides/firebase.png&#34; alt=&#34;Firebase Screenshot&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Writing Editor Widgets</title>
      <link>http://annotorious.github.io/guides/editor-widgets/</link>
      <pubDate>Thu, 24 Sep 2020 14:24:22 +0200</pubDate>
      <guid>http://annotorious.github.io/guides/editor-widgets/</guid>
      <description>&lt;h1 id=&#34;writing-your-own-editor-widgets&#34;&gt;Writing Your Own Editor Widgets&lt;/h1&gt;&#xA;&lt;p&gt;You can extend the editor with your own &lt;strong&gt;widgets&lt;/strong&gt;. A widget can be:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;an ordinary JavaScript function that takes a set of input arguments and returns&#xA;a DOM element, which will be inserted into the editor&lt;/li&gt;&#xA;&lt;li&gt;a &lt;a href=&#34;https://reactjs.org/docs/introducing-jsx.html&#34;&gt;React&lt;/a&gt; component conforming to the&#xA;same interface conventions as the built-in widgets.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Before you start writing your own widgets, you should first familiarize yourself with the&#xA;the &lt;a href=&#34;http://annotorious.github.io/getting-started/web-annotation&#34;&gt;W3C Web Annotation specification&lt;/a&gt;, in&#xA;particular the concepts of &lt;strong&gt;annotation bodies&lt;/strong&gt; and body &lt;strong&gt;purposes&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>React Editor Widget</title>
      <link>http://annotorious.github.io/guides/example-react-widget/</link>
      <pubDate>Sat, 20 Feb 2021 10:28:42 +0200</pubDate>
      <guid>http://annotorious.github.io/guides/example-react-widget/</guid>
      <description>&lt;h1 id=&#34;an-example-react-editor-widget&#34;&gt;An Example React Editor Widget&lt;/h1&gt;&#xA;&lt;p&gt;In this guide, we re-recreate the example &lt;a href=&#34;http://annotorious.github.io/guides/editor-widgets/&#34;&gt;color selector widget from the previous tutorial&lt;/a&gt;&#xA;as a React component. The widget adds a section to the editor with three buttons: red, green and blue.&#xA;Clicking one of the buttons will set an annotation body with the color value, and body purpose of &lt;code&gt;highlighting&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://annotorious.github.io/images/guides/colorselector-widget.png&#34; alt=&#34;Editor popup&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;JSX code for the plugin is below. A full project (including a webpack build configuration)&#xA;is &lt;a href=&#34;https://github.com/recogito/recogito-client-plugins/tree/main/packages/widget-react-helloworld&#34;&gt;available on GitHub&lt;/a&gt;.&#xA;Here&amp;rsquo;s what the code does, step by step:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Contributing Translations</title>
      <link>http://annotorious.github.io/guides/contributing-ui-translations/</link>
      <pubDate>Mon, 01 Jun 2020 20:04:18 +0200</pubDate>
      <guid>http://annotorious.github.io/guides/contributing-ui-translations/</guid>
      <description>&lt;h1 id=&#34;contributing-ui-translations&#34;&gt;Contributing UI Translations&lt;/h1&gt;&#xA;&lt;p&gt;We want to make the user interface available in as many languages as possible. If you want to help: providing a translation is easy - and because there are not many labeled elements, it&amp;rsquo;s not a lot of work.&lt;/p&gt;&#xA;&lt;h2 id=&#34;message-dictionaries&#34;&gt;Message Dictionaries&lt;/h2&gt;&#xA;&lt;p&gt;User interface labels are part of &lt;code&gt;recogito-client-core&lt;/code&gt;, a JavaScript package for common code shared between&#xA;Annotorious and RecogitoJS. In &lt;a href=&#34;https://github.com/recogito/recogito-client-core/tree/main/src/i18n&#34;&gt;this folder&lt;/a&gt;&#xA;you will find &lt;code&gt;messages&lt;/code&gt; files, one file for each available translation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hacker&#39;s Guide</title>
      <link>http://annotorious.github.io/guides/hackers-guide/</link>
      <pubDate>Thu, 04 Jun 2020 11:46:22 +0200</pubDate>
      <guid>http://annotorious.github.io/guides/hackers-guide/</guid>
      <description>&lt;h1 id=&#34;hackers-guide-to-annotorious-and-recogitojs&#34;&gt;Hacker&amp;rsquo;s Guide to Annotorious and RecogitoJS&lt;/h1&gt;&#xA;&lt;p&gt;We welcome pull requests to Annotorious and RecogitoJS - both to the code, as well as to our documentation! To contribute,&#xA;simply fork the relevant repository and hack away. Our code is located in the following repositories&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/recogito/annotorious&#34;&gt;recogito/annotorious&lt;/a&gt;&lt;/strong&gt;. Annotorious application entry point, SVG rendering&#xA;and drawing tool base classes.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/recogito/annotorious-openseadragon&#34;&gt;recogito/annotorious-openseadragon&lt;/a&gt;&lt;/strong&gt;. The OpenSeadragon plugin.&#xA;Imports most functionality from annotorious and recogito-client-core.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/recogito/recogito-client-core&#34;&gt;recogito/recogito-client-core&lt;/a&gt;&lt;/strong&gt;. A base module that contains shared&#xA;code for Annotorious and RecogitoJS, most importantly the code for the editor popup.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/recogito/recogito-js&#34;&gt;recogito/recogito-js&lt;/a&gt;&lt;/strong&gt;. RecogitoJS application entry point, text annotation&#xA;functionality.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;running-in-development-mode&#34;&gt;Running in Development Mode&lt;/h2&gt;&#xA;&lt;p&gt;To hack on &lt;strong&gt;Annotorious&lt;/strong&gt;, the &lt;strong&gt;OpenSeadragon plugin&lt;/strong&gt; or &lt;strong&gt;RecogitoJS&lt;/strong&gt;, you need to run them in development mode.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
